{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "EVALUATE_OPERATION": {
                "type": "Switch",
                "expression": "@triggerBody()?['operation']",
                "cases": {
                    "ADD_CUSTOMER": {
                        "case": "add",
                        "actions": {
                            "Create_or_update_customer": {
                                "type": "ServiceProvider",
                                "inputs": {
                                    "parameters": {
                                        "databaseId": "contoso",
                                        "containerId": "customer",
                                        "item": "@variables('customer')",
                                        "partitionKey": "@variables('customerId')",
                                        "isUpsert": true
                                    },
                                    "serviceProviderConfiguration": {
                                        "connectionName": "AzureCosmosDB",
                                        "operationId": "CreateOrUpdateDocument",
                                        "serviceProviderId": "/serviceProviders/AzureCosmosDB"
                                    }
                                },
                                "runAfter": {
                                    "Set_Variable_Customer_": [
                                        "Succeeded"
                                    ]
                                }
                            },
                            "Create_Update_Response": {
                                "type": "Response",
                                "kind": "http",
                                "inputs": {
                                    "statusCode": 200,
                                    "body": "@body('Create_or_update_customer')?['content']"
                                },
                                "runAfter": {
                                    "Create_or_update_customer": [
                                        "Succeeded"
                                    ]
                                }
                            },
                            "Set_Variable_Customer_": {
                                "type": "SetVariable",
                                "inputs": {
                                    "name": "customer",
                                    "value": {
                                        "id": "@variables('customerId')",
                                        "firstname": "@triggerBody()?['payload']?['firstname']",
                                        "lastname": "@triggerBody()?['payload']?['lastname']",
                                        "address": "@triggerBody()?['payload']?['address']"
                                    }
                                },
                                "runAfter": {}
                            }
                        }
                    },
                    "GET_CUSTOMERS": {
                        "case": "all",
                        "actions": {
                            "Select_customer": {
                                "type": "ServiceProvider",
                                "inputs": {
                                    "parameters": {
                                        "databaseId": "contoso",
                                        "containerId": "customer",
                                        "queryText": "SELECT * FROM c"
                                    },
                                    "serviceProviderConfiguration": {
                                        "connectionName": "AzureCosmosDB",
                                        "operationId": "QueryDocuments",
                                        "serviceProviderId": "/serviceProviders/AzureCosmosDB"
                                    }
                                },
                                "runAfter": {}
                            },
                            "Response_Customers": {
                                "type": "Response",
                                "kind": "http",
                                "inputs": {
                                    "statusCode": 200,
                                    "body": "@body('Select_customer')?['items']"
                                },
                                "runAfter": {
                                    "Select_customer": [
                                        "Succeeded"
                                    ]
                                }
                            }
                        }
                    },
                    "Get_Customer": {
                        "case": "get",
                        "actions": {
                            "Retrieve_Customer": {
                                "type": "ServiceProvider",
                                "inputs": {
                                    "parameters": {
                                        "databaseId": "contoso",
                                        "containerId": "customer",
                                        "itemId": "@triggerBody()?['payload']?['id']",
                                        "partitionKey": "@triggerBody()?['payload']?['id']"
                                    },
                                    "serviceProviderConfiguration": {
                                        "connectionName": "AzureCosmosDB",
                                        "operationId": "ReadDocument",
                                        "serviceProviderId": "/serviceProviders/AzureCosmosDB"
                                    }
                                },
                                "runAfter": {}
                            },
                            "Response_Customer": {
                                "type": "Response",
                                "kind": "http",
                                "inputs": {
                                    "statusCode": 200,
                                    "body": "@body('Retrieve_Customer')?['content']"
                                },
                                "runAfter": {
                                    "Retrieve_Customer": [
                                        "Succeeded"
                                    ]
                                }
                            }
                        }
                    }
                },
                "default": {
                    "actions": {
                        "Response": {
                            "type": "Response",
                            "kind": "http",
                            "inputs": {
                                "statusCode": 400,
                                "body": "Invalid Operation"
                            },
                            "runAfter": {}
                        }
                    }
                },
                "runAfter": {
                    "Initialize_Variable_customer": [
                        "Succeeded"
                    ]
                }
            },
            "Initialize_variable_customerId": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "customerId",
                            "type": "string",
                            "value": "@{guid()}"
                        }
                    ]
                },
                "runAfter": {}
            },
            "Initialize_Variable_customer": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "customer",
                            "type": "object",
                            "value": {}
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_customerId": [
                        "Succeeded"
                    ]
                }
            }
        },
        "triggers": {
            "manual": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "operation": {
                                "type": "string"
                            },
                            "payload": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "firstname": {
                                        "type": "string"
                                    },
                                    "lastname": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "country": {
                                                "type": "string"
                                            },
                                            "stateOrProvince": {
                                                "type": "string"
                                            },
                                            "civicNumber": {
                                                "type": "string"
                                            },
                                            "streetName": {
                                                "type": "string"
                                            },
                                            "postalCodeOrZipCode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {}
    },
    "kind": "Stateful"
}